import 'package:alobawa/providers/firebase_options.dart';
import 'package:alobawa/screens/mapShow.dart';
import 'package:alobawa/services/auth_service.dart';
import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:google_sign_in/google_sign_in.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/services.dart';

// / The scopes required by this application.
const List<String> scopes = <String>[
  'email',
  'https://www.googleapis.com/auth/contacts.readonly',
];

GoogleSignIn _googleSignIn = GoogleSignIn(
  // Optional clientId
  // clientId: 'your-client_id.apps.googleusercontent.com',
  scopes: scopes,
);

// final GoogleSignIn _googleSignIn = GoogleSignIn(
//   scopes: [
//     'email',
//     'https://www.googleapis.com/auth/contacts.readonly',
//   ],
// );
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String? _name, _photoUrl;

  List<Widget> _auth_control = [];

  // signin handler
  Future<void> _handleSignIn() async {
    final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();
    // obtain teh auth details

    final GoogleSignInAuthentication? googleAuth =
        await googleUser?.authentication;

    // Create a new crdential
    final credential = GoogleAuthProvider.credential(
      accessToken: googleAuth?.accessToken,
      idToken: googleAuth?.idToken,
    );
    // after signin
    var UserCredentialUser =
        (await FirebaseAuth.instance.signInWithCredential(credential)).user;
  }

  // sign out handler
  Future<void> _handleSignOut() async {
    await FirebaseAuth.instance.signOut();
  }

  @override
  Widget build(BuildContext context) {
    // FirebaseAuth.instance.authStateChanges().listen((User? user) {});
    bool isUser;
    FirebaseAuth.instance.authStateChanges().listen((User? user) {
      if (user == null) {
        setState(() {
          // _auth_control = <Widget>[
          //   ElevatedButton(
          //       onPressed: _handleSignIn,
          //       child: Text('continue with google...'))
          // ];
          isUser = false;
        });
        // print('User is currently signed out!');
      } else {
        _name = user.displayName;
        _photoUrl = user.photoURL;
        isUser = true;
        setState(() {
          _auth_control = <Widget>[
            ClipRRect(
              borderRadius: BorderRadius.circular(50.0),
              child: Image.network(_photoUrl!),
            ),
            Text(_name!),
            ElevatedButton(
              onPressed: _handleSignOut,
              child: Text('Sign out'),
            )
          ];
        });
        // print('User is signed in!');
        // print("$_name " + "$_photoUrl");
      }
    });

    // return Scaffold(
    //   appBar: AppBar(
    //     title: const Text('google authentication!'),
    //   ),
    //   body: Container(
    //       child: GridView.builder(
    //     itemCount: _auth_control.length,
    //     gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
    //       crossAxisCount: 1,
    //       mainAxisSpacing: 10.0,
    //       crossAxisSpacing: 10.0,
    //     ),
    //     itemBuilder: (BuildContext context, int index) {
    //       return _auth_control[index];
    //     },
    //   )), // This trailing comma makes auto-formatting nicer for build methods.
    // );
    return Scaffold(
      body: Center(
          child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          ElevatedButton(
            onPressed: () => _handleSignIn(),
            child: Text('Continiue with google'),
          ),
        ],
      )),
    );
  }
}
